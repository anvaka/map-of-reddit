{"version":3,"sources":["webpack:///./node_modules/robust-predicates/umd/orient2d.min.js","webpack:///./node_modules/point-in-polygon/index.js","webpack:///./node_modules/point-in-polygon/flat.js","webpack:///./node_modules/concaveman/index.js","webpack:///./node_modules/point-in-polygon/nested.js"],"names":["t","e","exports","this","n","r","o","f","i","u","c","s","a","d","l","p","Float64Array","orient2d","b","y","h","M","x","j","m","Math","abs","_","v","w","A","F","O","P","g","k","q","z","B","C","D","E","G","H","I","J","K","L","N","Q","orient2dfast","Object","defineProperty","value","pointInPolygonFlat","pointInPolygonNested","module","point","vs","start","end","length","Array","isArray","nested","flat","inside","undefined","len","xi","yi","xj","yj","intersect","RBush","Queue","pointInPolygon","orient","concaveman","points","concavity","lengthThreshold","max","hull","fastConvexHull","tree","toBBox","minX","minY","maxX","maxY","compareMinX","compareMinY","load","last","queue","remove","insertNode","push","segTree","insert","updateBBox","sqConcavity","sqLenThreshold","node","shift","next","sqLen","getSqDist","maxSqLen","findCandidate","prev","min","concave","maxDist","compareDist","data","children","child","dist","leaf","sqSegDist","sqSegBoxDist","peek","item","pop","d0","d1","noIntersections","bbox","sqSegSegDist","d2","d3","d4","edges","search","intersects","cross","p1","p2","p3","q1","q2","left","top","right","bottom","cull","filtered","slice","convexHull","dx","dy","x0","y0","x1","y1","x2","y2","x3","y3","sc","sN","tc","tN","ux","uy","vx","vy","wx","wy","sD","tD","cx","cy","cx2","cy2","compareByX","sort","lower","upper","ii","concat","default"],"mappings":"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","file":"js/chunk-9475eac2.1e9ebc1b.js","sourcesContent":["!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],e):e((t=t||self).predicates={})}(this,function(t){\"use strict\";const e=134217729,n=33306690738754706e-32;function r(t,e,n,r,o){let f,i,u,c,s=e[0],a=r[0],d=0,l=0;a>s==a>-s?(f=s,s=e[++d]):(f=a,a=r[++l]);let p=0;if(d<t&&l<n)for(a>s==a>-s?(u=f-((i=s+f)-s),s=e[++d]):(u=f-((i=a+f)-a),a=r[++l]),f=i,0!==u&&(o[p++]=u);d<t&&l<n;)a>s==a>-s?(u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d]):(u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l]),f=i,0!==u&&(o[p++]=u);for(;d<t;)u=f-((i=f+s)-(c=i-f))+(s-c),s=e[++d],f=i,0!==u&&(o[p++]=u);for(;l<n;)u=f-((i=f+a)-(c=i-f))+(a-c),a=r[++l],f=i,0!==u&&(o[p++]=u);return 0===f&&0!==p||(o[p++]=f),p}function o(t){return new Float64Array(t)}const f=33306690738754716e-32,i=22204460492503146e-32,u=11093356479670487e-47,c=o(4),s=o(8),a=o(12),d=o(16),l=o(4);t.orient2d=function(t,o,p,b,y,h){const M=(o-h)*(p-y),x=(t-y)*(b-h),j=M-x;if(0===M||0===x||M>0!=x>0)return j;const m=Math.abs(M+x);return Math.abs(j)>=f*m?j:-function(t,o,f,p,b,y,h){let M,x,j,m,_,v,w,A,F,O,P,g,k,q,z,B,C,D;const E=t-b,G=f-b,H=o-y,I=p-y;_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=I-(F=(v=e*I)-(v-I)))-((q=E*I)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=G-(F=(v=e*G)-(v-G)))-((B=H*G)-w*F-A*F-w*O))),c[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),c[1]=k-(P+_)+(_-B),_=(D=g+P)-g,c[2]=g-(D-_)+(P-_),c[3]=D;let J=function(t,e){let n=e[0];for(let r=1;r<t;r++)n+=e[r];return n}(4,c),K=i*h;if(J>=K||-J>=K)return J;if(M=t-(E+(_=t-E))+(_-b),j=f-(G+(_=f-G))+(_-b),x=o-(H+(_=o-H))+(_-y),m=p-(I+(_=p-I))+(_-y),0===M&&0===x&&0===j&&0===m)return J;if(K=u*h+n*Math.abs(J),(J+=E*m+I*M-(H*j+G*x))>=K||-J>=K)return J;_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=I-(F=(v=e*I)-(v-I)))-((q=M*I)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=G-(F=(v=e*G)-(v-G)))-((B=x*G)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const L=r(4,c,4,l,s);_=(z=(A=E-(w=(v=e*E)-(v-E)))*(O=m-(F=(v=e*m)-(v-m)))-((q=E*m)-w*F-A*F-w*O))-(P=z-(C=(A=H-(w=(v=e*H)-(v-H)))*(O=j-(F=(v=e*j)-(v-j)))-((B=H*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const N=r(L,s,4,l,a);_=(z=(A=M-(w=(v=e*M)-(v-M)))*(O=m-(F=(v=e*m)-(v-m)))-((q=M*m)-w*F-A*F-w*O))-(P=z-(C=(A=x-(w=(v=e*x)-(v-x)))*(O=j-(F=(v=e*j)-(v-j)))-((B=x*j)-w*F-A*F-w*O))),l[0]=z-(P+_)+(_-C),_=(k=q-((g=q+P)-(_=g-q))+(P-_))-(P=k-B),l[1]=k-(P+_)+(_-B),_=(D=g+P)-g,l[2]=g-(D-_)+(P-_),l[3]=D;const Q=r(N,a,4,l,d);return d[Q-1]}(t,o,p,b,y,h,m)},t.orient2dfast=function(t,e,n,r,o,f){return(e-f)*(n-o)-(t-o)*(r-f)},Object.defineProperty(t,\"__esModule\",{value:!0})});\n","var pointInPolygonFlat = require('./flat.js')\nvar pointInPolygonNested = require('./nested.js')\n\nmodule.exports = function pointInPolygon (point, vs, start, end) {\n    if (vs.length > 0 && Array.isArray(vs[0])) {\n        return pointInPolygonNested(point, vs, start, end);\n    } else {\n        return pointInPolygonFlat(point, vs, start, end);\n    }\n}\nmodule.exports.nested = pointInPolygonNested\nmodule.exports.flat = pointInPolygonFlat\n","module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n","'use strict';\n\nvar RBush = require('rbush');\nvar Queue = require('tinyqueue');\nvar pointInPolygon = require('point-in-polygon');\nconst orient = require('robust-predicates/umd/orient2d.min.js').orient2d;\n\nmodule.exports = concaveman;\nmodule.exports.default = concaveman;\n\nfunction concaveman(points, concavity, lengthThreshold) {\n    // a relative measure of concavity; higher value means simpler hull\n    concavity = Math.max(0, concavity === undefined ? 2 : concavity);\n\n    // when a segment goes below this length threshold, it won't be drilled down further\n    lengthThreshold = lengthThreshold || 0;\n\n    // start with a convex hull of the points\n    var hull = fastConvexHull(points);\n\n    // index the points with an R-tree\n    var tree = new RBush(16);\n    tree.toBBox = function (a) {\n        return {\n            minX: a[0],\n            minY: a[1],\n            maxX: a[0],\n            maxY: a[1]\n        };\n    };\n    tree.compareMinX = function (a, b) { return a[0] - b[0]; };\n    tree.compareMinY = function (a, b) { return a[1] - b[1]; };\n\n    tree.load(points);\n\n    // turn the convex hull into a linked list and populate the initial edge queue with the nodes\n    var queue = [];\n    for (var i = 0, last; i < hull.length; i++) {\n        var p = hull[i];\n        tree.remove(p);\n        last = insertNode(p, last);\n        queue.push(last);\n    }\n\n    // index the segments with an R-tree (for intersection checks)\n    var segTree = new RBush(16);\n    for (i = 0; i < queue.length; i++) segTree.insert(updateBBox(queue[i]));\n\n    var sqConcavity = concavity * concavity;\n    var sqLenThreshold = lengthThreshold * lengthThreshold;\n\n    // process edges one by one\n    while (queue.length) {\n        var node = queue.shift();\n        var a = node.p;\n        var b = node.next.p;\n\n        // skip the edge if it's already short enough\n        var sqLen = getSqDist(a, b);\n        if (sqLen < sqLenThreshold) continue;\n\n        var maxSqLen = sqLen / sqConcavity;\n\n        // find the best connection point for the current edge to flex inward to\n        p = findCandidate(tree, node.prev.p, a, b, node.next.next.p, maxSqLen, segTree);\n\n        // if we found a connection and it satisfies our concavity measure\n        if (p && Math.min(getSqDist(p, a), getSqDist(p, b)) <= maxSqLen) {\n            // connect the edge endpoints through this point and add 2 new edges to the queue\n            queue.push(node);\n            queue.push(insertNode(p, node));\n\n            // update point and segment indexes\n            tree.remove(p);\n            segTree.remove(node);\n            segTree.insert(updateBBox(node));\n            segTree.insert(updateBBox(node.next));\n        }\n    }\n\n    // convert the resulting hull linked list to an array of points\n    node = last;\n    var concave = [];\n    do {\n        concave.push(node.p);\n        node = node.next;\n    } while (node !== last);\n\n    concave.push(node.p);\n\n    return concave;\n}\n\nfunction findCandidate(tree, a, b, c, d, maxDist, segTree) {\n    var queue = new Queue([], compareDist);\n    var node = tree.data;\n\n    // search through the point R-tree with a depth-first search using a priority queue\n    // in the order of distance to the edge (b, c)\n    while (node) {\n        for (var i = 0; i < node.children.length; i++) {\n            var child = node.children[i];\n\n            var dist = node.leaf ? sqSegDist(child, b, c) : sqSegBoxDist(b, c, child);\n            if (dist > maxDist) continue; // skip the node if it's farther than we ever need\n\n            queue.push({\n                node: child,\n                dist: dist\n            });\n        }\n\n        while (queue.length && !queue.peek().node.children) {\n            var item = queue.pop();\n            var p = item.node;\n\n            // skip all points that are as close to adjacent edges (a,b) and (c,d),\n            // and points that would introduce self-intersections when connected\n            var d0 = sqSegDist(p, a, b);\n            var d1 = sqSegDist(p, c, d);\n            if (item.dist < d0 && item.dist < d1 &&\n                noIntersections(b, p, segTree) &&\n                noIntersections(c, p, segTree)) return p;\n        }\n\n        node = queue.pop();\n        if (node) node = node.node;\n    }\n\n    return null;\n}\n\nfunction compareDist(a, b) {\n    return a.dist - b.dist;\n}\n\n// square distance from a segment bounding box to the given one\nfunction sqSegBoxDist(a, b, bbox) {\n    if (inside(a, bbox) || inside(b, bbox)) return 0;\n    var d1 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.maxX, bbox.minY);\n    if (d1 === 0) return 0;\n    var d2 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.minY, bbox.minX, bbox.maxY);\n    if (d2 === 0) return 0;\n    var d3 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.maxX, bbox.minY, bbox.maxX, bbox.maxY);\n    if (d3 === 0) return 0;\n    var d4 = sqSegSegDist(a[0], a[1], b[0], b[1], bbox.minX, bbox.maxY, bbox.maxX, bbox.maxY);\n    if (d4 === 0) return 0;\n    return Math.min(d1, d2, d3, d4);\n}\n\nfunction inside(a, bbox) {\n    return a[0] >= bbox.minX &&\n           a[0] <= bbox.maxX &&\n           a[1] >= bbox.minY &&\n           a[1] <= bbox.maxY;\n}\n\n// check if the edge (a,b) doesn't intersect any other edges\nfunction noIntersections(a, b, segTree) {\n    var minX = Math.min(a[0], b[0]);\n    var minY = Math.min(a[1], b[1]);\n    var maxX = Math.max(a[0], b[0]);\n    var maxY = Math.max(a[1], b[1]);\n\n    var edges = segTree.search({minX: minX, minY: minY, maxX: maxX, maxY: maxY});\n    for (var i = 0; i < edges.length; i++) {\n        if (intersects(edges[i].p, edges[i].next.p, a, b)) return false;\n    }\n    return true;\n}\n\nfunction cross(p1, p2, p3) {\n    return orient(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\n// check if the edges (p1,q1) and (p2,q2) intersect\nfunction intersects(p1, q1, p2, q2) {\n    return p1 !== q2 && q1 !== p2 &&\n        cross(p1, q1, p2) > 0 !== cross(p1, q1, q2) > 0 &&\n        cross(p2, q2, p1) > 0 !== cross(p2, q2, q1) > 0;\n}\n\n// update the bounding box of a node's edge\nfunction updateBBox(node) {\n    var p1 = node.p;\n    var p2 = node.next.p;\n    node.minX = Math.min(p1[0], p2[0]);\n    node.minY = Math.min(p1[1], p2[1]);\n    node.maxX = Math.max(p1[0], p2[0]);\n    node.maxY = Math.max(p1[1], p2[1]);\n    return node;\n}\n\n// speed up convex hull by filtering out points inside quadrilateral formed by 4 extreme points\nfunction fastConvexHull(points) {\n    var left = points[0];\n    var top = points[0];\n    var right = points[0];\n    var bottom = points[0];\n\n    // find the leftmost, rightmost, topmost and bottommost points\n    for (var i = 0; i < points.length; i++) {\n        var p = points[i];\n        if (p[0] < left[0]) left = p;\n        if (p[0] > right[0]) right = p;\n        if (p[1] < top[1]) top = p;\n        if (p[1] > bottom[1]) bottom = p;\n    }\n\n    // filter out points that are inside the resulting quadrilateral\n    var cull = [left, top, right, bottom];\n    var filtered = cull.slice();\n    for (i = 0; i < points.length; i++) {\n        if (!pointInPolygon(points[i], cull)) filtered.push(points[i]);\n    }\n\n    // get convex hull around the filtered points\n    return convexHull(filtered);\n}\n\n// create a new node in a doubly linked list\nfunction insertNode(p, prev) {\n    var node = {\n        p: p,\n        prev: null,\n        next: null,\n        minX: 0,\n        minY: 0,\n        maxX: 0,\n        maxY: 0\n    };\n\n    if (!prev) {\n        node.prev = node;\n        node.next = node;\n\n    } else {\n        node.next = prev.next;\n        node.prev = prev;\n        prev.next.prev = node;\n        prev.next = node;\n    }\n    return node;\n}\n\n// square distance between 2 points\nfunction getSqDist(p1, p2) {\n\n    var dx = p1[0] - p2[0],\n        dy = p1[1] - p2[1];\n\n    return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction sqSegDist(p, p1, p2) {\n\n    var x = p1[0],\n        y = p1[1],\n        dx = p2[0] - x,\n        dy = p2[1] - y;\n\n    if (dx !== 0 || dy !== 0) {\n\n        var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n        if (t > 1) {\n            x = p2[0];\n            y = p2[1];\n\n        } else if (t > 0) {\n            x += dx * t;\n            y += dy * t;\n        }\n    }\n\n    dx = p[0] - x;\n    dy = p[1] - y;\n\n    return dx * dx + dy * dy;\n}\n\n// segment to segment distance, ported from http://geomalgorithms.com/a07-_distance.html by Dan Sunday\nfunction sqSegSegDist(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var ux = x1 - x0;\n    var uy = y1 - y0;\n    var vx = x3 - x2;\n    var vy = y3 - y2;\n    var wx = x0 - x2;\n    var wy = y0 - y2;\n    var a = ux * ux + uy * uy;\n    var b = ux * vx + uy * vy;\n    var c = vx * vx + vy * vy;\n    var d = ux * wx + uy * wy;\n    var e = vx * wx + vy * wy;\n    var D = a * c - b * b;\n\n    var sc, sN, tc, tN;\n    var sD = D;\n    var tD = D;\n\n    if (D === 0) {\n        sN = 0;\n        sD = 1;\n        tN = e;\n        tD = c;\n    } else {\n        sN = b * e - c * d;\n        tN = a * e - b * d;\n        if (sN < 0) {\n            sN = 0;\n            tN = e;\n            tD = c;\n        } else if (sN > sD) {\n            sN = sD;\n            tN = e + b;\n            tD = c;\n        }\n    }\n\n    if (tN < 0.0) {\n        tN = 0.0;\n        if (-d < 0.0) sN = 0.0;\n        else if (-d > a) sN = sD;\n        else {\n            sN = -d;\n            sD = a;\n        }\n    } else if (tN > tD) {\n        tN = tD;\n        if ((-d + b) < 0.0) sN = 0;\n        else if (-d + b > a) sN = sD;\n        else {\n            sN = -d + b;\n            sD = a;\n        }\n    }\n\n    sc = sN === 0 ? 0 : sN / sD;\n    tc = tN === 0 ? 0 : tN / tD;\n\n    var cx = (1 - sc) * x0 + sc * x1;\n    var cy = (1 - sc) * y0 + sc * y1;\n    var cx2 = (1 - tc) * x2 + tc * x3;\n    var cy2 = (1 - tc) * y2 + tc * y3;\n    var dx = cx2 - cx;\n    var dy = cy2 - cy;\n\n    return dx * dx + dy * dy;\n}\n\nfunction compareByX(a, b) {\n    return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\n}\n\nfunction convexHull(points) {\n    points.sort(compareByX);\n\n    var lower = [];\n    for (var i = 0; i < points.length; i++) {\n        while (lower.length >= 2 && cross(lower[lower.length - 2], lower[lower.length - 1], points[i]) <= 0) {\n            lower.pop();\n        }\n        lower.push(points[i]);\n    }\n\n    var upper = [];\n    for (var ii = points.length - 1; ii >= 0; ii--) {\n        while (upper.length >= 2 && cross(upper[upper.length - 2], upper[upper.length - 1], points[ii]) <= 0) {\n            upper.pop();\n        }\n        upper.push(points[ii]);\n    }\n\n    upper.pop();\n    lower.pop();\n    return lower.concat(upper);\n}\n","// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n"],"sourceRoot":""}